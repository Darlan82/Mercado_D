// <auto-generated />
using System;
using MercadoD.Infra.Persistence.Sql.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MercadoD.Infra.Persistence.Sql.Migrations
{
    [DbContext(typeof(MercadoEFContext))]
    partial class MercadoEFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.ContaFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("LojaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("SaldoPrevisto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoRealizado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("ContasFinanceiras", (string)null);
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.LancamentoFinanceiro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLancamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<bool>("SaldoPrevistoContabilizado")
                        .HasColumnType("bit");

                    b.Property<bool>("SaldoRealizadoContabilizado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("LancamentosFinanceiros", (string)null);
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.SaldoConsolidadoDiario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Data")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<decimal>("SaldoPrevisto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoRealizado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.HasIndex("ContaId", "Data")
                        .IsUnique()
                        .HasDatabaseName("IX_Conta_Data");

                    b.ToTable("SaldosConsolidadosDiario", (string)null);
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.Loja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DtAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Lojas", (string)null);
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.ContaFinanceira", b =>
                {
                    b.HasOne("MercadoD.Domain.Loja.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.LancamentoFinanceiro", b =>
                {
                    b.HasOne("MercadoD.Domain.Loja.FluxoCaixa.ContaFinanceira", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("MercadoD.Domain.Loja.FluxoCaixa.SaldoConsolidadoDiario", b =>
                {
                    b.HasOne("MercadoD.Domain.Loja.FluxoCaixa.ContaFinanceira", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });
#pragma warning restore 612, 618
        }
    }
}
